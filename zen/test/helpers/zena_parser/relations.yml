default:
  context:
    lang: 'en'
    visitor: 'ant'
    node: 'status'
  
set_tags:
  src: "<r:project><r:show attr='name'/>: <r:set_tags><r:each join=', '><r:show attr='name'/></r:each></r:set_tags></r:project>"
  res: "cleanWater: art"

tagged:
  context:
    node: 'art'
  src: "<r:tagged><r:each join=', '><r:show attr='name'/></r:each></r:tagged>"
  res: "cleanWater, opening"

documents:
  context:
    node: 'nature'
  src: "<r:documents><r:each join=', '><r:show attr='name'/></r:each></r:documents>"
  res: "forest, tree"

documents_only:
  context:
    node: 'nature'
  src: "<r:documents where='kpath not like \"NDI%\"'><r:each join=', '><r:show attr='name'/></r:each></r:documents>"
  res: "forest"

images:
  context:
    node: 'nature'
  src: "<r:images><r:each join=', '><r:show attr='name'/></r:each></r:images>"
  res: "tree"

icon:
  context:
    node: 'cleanWater'
  src: "<r:icon do='[name]'/>"
  tem: "/ORDER BY links.id DESC/"
  res: "lake"
  
pages:
  context:
    node: 'cleanWater'
  src: "<r:pages><r:each join=', '><r:show attr='name'/></r:each></r:pages>"
  res: "status, track"

root:
  src: "<r:root do='[v_title]'/>"
  res: 'Zena the wild CMS'
  
notes:
  context:
    node: 'cleanWater'
  src: "<r:notes><r:each join=', '><r:show attr='name'/></r:each></r:notes>"
  res: "opening"
  
blog_with_news:
  context:
    node: 'zena'
  src: "<r:notes or='news' do='each' join=', ' do='[name]'/>"
  res: "letter, opening"
  
blog_with_bad_relation:
  context:
    node: 'zena'
  src: "<r:notes or='whatever' do='each' join=', ' do='[name]'/>"
  res: "<span class='parser_error'>[notes, whatever] unknown relation 'whatever'</span>"

pages_do_syntax:
  src: "<ol do='pages where name like \"c%\" in site'><li do='each' do='[name]'/></ol>"
  res: "<ol><li>cleanWater</li><li>collections</li></ol>"
  
pages_limit:
  context:
    node: 'cleanWater'
  src: "<r:pages limit='2' order='name DESC'><r:each join=', '><r:show attr='name'/></r:each></r:pages>"
  res: "track, status"

pages_random:
  context:
    node: 'cleanWater'
  src: "<r:pages limit='3' order='random'><r:each join=', '><r:show attr='name'/></r:each></r:pages>"
  tem: "/ORDER BY RAND/"

nodes_in_project:
  src: "<r:nodes in='project' limit='2'><r:each join=', '><r:show attr='name'/></r:each></r:nodes>"
  res: "lake, lakeAddress"
  
nodes_in_project_stored:
  src: "<r:void store='foo'><r:node select='29'>from <r:show attr='name'/>, look at <r:node select='foo' do='[name]'/>: <r:pages in='site' project='foo' do='each' join=', ' do='[name]'/></r:node></r:void>"
  res: "from wiki, look at status: status, track"
  
nodes_in_site:
  src: "<r:nodes in='site' limit='3'><r:each join=', ' do='show' attr='name'/></r:nodes>"
  res: "anonymous, ant, art"

store_node:
  src: "<r:void store='baz'><r:parent><r:show attr='name'/>: <r:node select='baz'><r:show attr='name'/></r:node> + <r:node select='main' do='show' attr='id'/></r:parent></r:void>"
  res: "cleanWater: status + 22"

store_in_block:
  src: "<r:block><r:node select='18' store='found' do='pages'><r:show attr='name'/>: <r:node select='found' do='[name]'/></r:node></r:block>"
  res: "<div id='list1'>projects: status</div>"

store_outside_block:
  src: "<r:node select='18' store='found' do='pages'><r:block><r:show attr='name'/>: <r:node select='found' do='[name]'/></r:block></r:node>"
  res: "<div id='list1'>projects: status</div>"
  'store/outside/en/block/list1.erb': "/unknown relation 'found'/"

store_node_as_relation:
  src: "<r:void store='baz'><r:parent><r:show attr='name'/>: <r:baz do='[name]'/> + <r:node select='main' do='show' attr='id'/></r:parent></r:void>"
  res: "cleanWater: status + 22"

store_img:
  src: "<r:parent><r:icon store='bob'><r:show attr='name'/><r:img link='bob'/></r:icon></r:parent>"
  tem: "/if var1 = @node.parent.*var2 = var1.do_find.*relation_id = _ID(node_has_an_icon).*LIKE 'NDI%'.*var2.name.*zen_path\(var1\).*img_tag\(var2/"
    
author_visitor:
  src: "<r:pages in='site' author='visitor' limit='5'><r:each join=', ' do='show' attr='name'/></r:pages>"
  res: "myLife, nature, status"

author:
  src: "my master: <r:author do='[fullname]'/> my version master: <r:version do='author' do='[fullname]'/>"
  res: "my master: Solenopsis Invicta my version master: Solenopsis Invicta"

zafu_readable_link:
  src: "<r:show attr='set_tag_ids'/>"
  tem: "<%= @node.set_tag_zips %>"

zafu_readable_link_for:
  src: "<r:show attr='hot_for_ids'/>"
  tem: "<%= @node.hot_for_zips %>"

zafu_readable_link_id:
  src: "<r:show attr='icon_id'/>"
  tem: "<%= @node.icon_zip %>"

node_id:
  src: "I (<r:show attr='name'/>) know: <r:node select='12'><r:show attr='name'/> with <r:children><span do='each' join=', '><r:show attr='name'>child</r:show></span></r:children></r:node>"
  res: "I (status) know: people with <span>anonymous</span>, <span>ant</span>, <span>lion</span>, <span>tiger</span>"

node_path:
  src: "<r:node select='/projects/wiki'><r:link/></r:node>"
  res: "<a href='/oo/project29.html'>a wiki with zena</a>"

node_root:
  src: "<r:node select='root'><r:show attr='name'/></r:node>"
  res: "zena"

parent_no_parent:
  src: "result=<r:node select='root'><r:parent><r:show attr='name'/></r:parent></r:node>="
  res: "result=="
  
node_not_found:
  src: "result=<r:node select='99'>this is something</r:node>="
  res: "result=="

node_not_found_else:
  src: "result=<r:node select='99'><r:link/><r:else>not found</r:else></r:node>="
  res: "result=not found="

children_else_block:
  src: "<r:children>I am a parent !<r:else>I am not tired.</r:else></r:children>"
  res: "I am not tired."

each_not_in_list:
  src: "<r:each><r:show attr='name'/></r:each>"
  res: "status"

hot_else_block:
  src: "<r:hot>I am hot<r:else>I am not (<r:show attr='name'/>)</r:else> and funny</r:hot>"
  res: "I am not (status)"

hot_not_else_block:
  context:
    node: 'cleanWater'
  src: "<r:hot>I am hot<r:else>I am not</r:else> and funny</r:hot>"
  res: "I am hot and funny"
  
children_else:
  src: "<r:children where='name like \"%asdfg\"' else='self'><r:each join=', '><r:show attr='name'/></r:each></r:children>"
  res: "status"

hot_else:
  src: "<r:hot else='project'><r:show attr='name'/></r:hot>"
  res: "cleanWater"

updated_today:
  src: "<r:pages in='site' updated='today' do='each' join=', ' do='show' attr='name'/>"
  res: "art, status"

upcoming_events:
  src: "<r:pages in='site' log='upcoming' do='each' join=', ' do='show' attr='name'/>"
  res: "people"

in_7_days:
  src: "<r:pages in='site' log='+7days' do='each' join=', ' do='show' attr='name'/>"
  res: "cleanWater, projects"
  
logged_7_days_ago:
  src: "<r:pages in='site' log='-7days' do='each' join=', ' do='show' attr='name'/>"
  res: "cleanWater, projects"
  
around_7_days:
  src: "<r:pages in='site' log='7days' do='each' join=', ' do='show' attr='name'/>"
  res: "art, cleanWater, projects, status"
  
in_37_hours:
  src: "<r:pages in='site' log='+37hours' do='each' join=', ' do='show' attr='name'/>"
  res: "art, cleanWater"

this_week:
  src: "<r:pages in='site' event='week' do='each' join=', ' do='show' attr='name'/>"
  res: "art, projects"

this_month:
  src: "<r:pages in='site' event='month' do='each' join=', ' do='show' attr='name'/>"
  res: "art, projects"

this_year:
  src: "<r:pages in='site' event='year' do='each' join=', ' do='show' attr='name'/>"
  res: "art, projects"

date_select:
  src: "<r:date select='2006-04-05'><r:nodes in='site' log='current' do='each' join=', ' do='show' attr='name'/>"
  res: "letter, proposition"

empty_list:
  src: "<ul do='hot'>blah</ul><r:hot><ul>bib</ul></r:hot>"
  res: ""

order_limit:
  context:
    node: 'zena'
  src: "<ul do='news' in='site' limit='5' order='updated_at DESC'><li do='each'><r:link/></li></ul>"
  res: "<ul><li><a href='/oo/projects/cleanWater/post27.html'>parc opening</a></li></ul>"

relation_not_in_current_node:
  src: "<ul do='news' in='site' limit='5' order='updated_at DESC'><li do='each'><r:link/></li></ul>"
  res: "<ul><li><a href='/oo/projects/cleanWater/post27.html'>parc opening</a></li></ul>"
  
pages_anchor:
  src: "<r:pages in='site' limit='3' do='each' join=', '><r:show attr='name' anchor='true'/></r:pages>"
  res: "<a name='node33'></a>art, <a name='node21'></a>cleanWater, <a name='node32'></a>collections"

projects_in_site:
  src: "<div class='all_projects' do='projects' in='site'><r:each join=', ' do='show' attr='name'/></div>"
  res: "<div class='all_projects'>cleanWater, wiki, zena</div>"

projects:
  src: "<r:projects in='site'><r:each join=', ' do='show' attr='name'/></r:projects>"
  res: "cleanWater, wiki, zena"

nodes:
  src: "<r:nodes in='project'><r:each join=', ' do='show' attr='name'/></r:nodes>"
  res: "lake, lakeAddress, opening, status, track, water"

menu_with_favorites:
  src: "<ul><r:root do='pages' only='public' cache='true' name='menu'><li do='each'><r:link/><ul do='pages'><li do='each' do='link'/></ul></li></r:root><r:node select='visitor' do='favorites'><li class='favorites'><r:trans>favorites</r:trans><ul><li do='each' do='link'/></ul></li></ul>"
  res: "/.*tag33.*tag35.*Clean Water.*favorites.*Nature/"
  
visitor_favorites:
  src: "<r:node select='visitor'><ul do='favorites'><li do='each' do='link'/></ul></r:node>"
  res: "<ul><li><a href='/oo/page39.html'>Nature</a></li></ul>"
  
checkbox:
  src: "<r:checkbox role='hot_for' values='projects' in='site'/>"
  res: "/<input type='checkbox' name='node\[hot_for_ids\]\[\]' value='21' checked='checked'\/> cleanWater/"

checkbox_unique:
  src: "<r:checkbox role='icon' values='images' in='site'/>"
  res: "/<input type='radio' name='node\[icon_id\]' value='30'\/> bird"

direction_both:
  src: "<r:references or='reference_for' do='each' join=', ' do='[name]'/>"
  res: "art, projects"

direction_both_self_auto_ref:
  src: "<r:references or='reference_for' do='each' join=', ' do='[name]'/>"
  res: "art, projects, status"

direction_both_else:
  src: "<r:references direction='both' else='parent' do='each' join=', ' do='[name]'/>"
  res: "cleanWater"

visitor:
  src: "<r:visitor><b do='[v_title]'/></r:visitor>"
  res: "<b>Solenopsis Invicta</b>"

relation_in_site:
  src: "<r:tagged in='site' limit='10' do='each' join=',' do='[name]'/>"
  res: "cleanWater,opening"

relation_in_site_find_first:
  src: "<r:tagged find='first' in='site' limit='10' do='each' join=',' do='[name]'/>"
  res: "cleanWater"

where:
  src: "<r:tagged where=\"name='opening'\" in='site' do='each' join=',' do='[name]'/>"
  res: "opening"

where_like:
  src: "<r:images where='name like \"%ke\"' in='site' do='each' join=',' do='[name]'/>"
  res: "lake"
  
where_like_param:
  src: "<r:tagged where='name like \"%[param:tag]%\" and \"[param:tag]\" ne \"\"' in='site' or='self' do='each' join=',' do='[name]'/>"
  tem: "/Node.connection.quote\(params\[:tag\].to_s\)\} <> ''"
  res: "status"
  
where_not:
  context:
    node: 'cleanWater'
  src: "<r:nodes where='name ne \"status\"' do='each' join=',' do='[name]'/>"
  res: "lake,lakeAddress,opening,track,water"

order_dyn_attr:
  context:
    node: 'cleanWater'
  src: "<r:nodes order='d_assigned DESC, name ASC' do='each'><span do='[name]' assigned_if='d_assigned'/></r:nodes>"
  res: "<span class='assigned'>status</span><span>lake</span><span>lakeAddress</span><span>opening</span><span>track</span><span>water</span>"

# Bug #190 (hard to fix...)
where_dyn_attr_is_null:
  context:
    node: 'cleanWater'
  src: "<r:nodes where='d_assigned is null' do='each' join=', ' do='[name]'/>"
  res: "lake, lakeAddress, opening, track, water"

where_two_attributes:
  src: "<r:nodes where='log_at ne event_at' in='site' do='each' join=', ' do='[name]'/>"
  tem: "/nodes.log_at <> nodes.event_at/"
  res: "letter, opening"
  
many_or:
  src: "<r:tagged in='site' or='images in site' or='tags in site' do='each' join=',' do='[name]'/>"
  res: "art,bird,cleanWater,flower,lake,menu,news,opening,tree"
  
hot_or_page:
  src: "<r:hot or='page in project'>...</r:hot>"
  tem: "/:first.*.*links.relation_id = _ID(project_has_a_hot_element).*nodes.kpath LIKE 'NP%' AND nodes.project_id = #\{@node.get_project_id\}.*LIMIT 1"
  
node_in_version:
  src: "<r:version><r:node do='[name]'/></r:version>"
  res: "status"

where_with_param:
  src: "<r:nodes where='v_title like \"%[param:t]%\"' in='site'/>"
  tem: "/versions.title LIKE \#\{Node.connection.quote\(\"%\" \+params\[:t\].to_s\+ \"%\"\)\}/"

group_by_secret_project:
  src: "<r:notes in='site' order='name ASC' do='group' by='project'><b do='project' do='[name]'/>: <r:each join=',' do='[name]'/></r:notes>"
  res: ": proposition<b>cleanWater</b>: opening<b>zena</b>: letter"

group_by_project:
  context:
    visitor: lion
  src: "<r:notes in='site' order='name ASC' do='group' by='project'><b do='project' do='[name]'/>: <r:each join=',' do='[name]'/></r:notes>"
  res: "<b>cleanWater</b>: opening<b>secret</b>: proposition<b>zena</b>: letter"

group_by_project_sort_zip:
  src: "<r:images in='site' order='name ASC' do='group' by='project' sort='zip'><b do='project' do='[name]'/>: <r:each join=',' do='[name]'/></r:images>"
  res: "<b>zena</b>: tree<b>cleanWater</b>: lake<b>wiki</b>: bird,flower"

group_by_parent_sort:
  src: "<r:images in='site' order='name ASC' do='group' by='parent'><b do='parent' do='[name]'/>: <r:each join=',' do='[name]'/></r:images>"
  res: "<b>cleanWater</b>: lake<b>nature</b>: tree<b>wiki</b>: bird,flower"
#icons_from_nodes_from_project:
#  src: "<r:icons from='nodes' in='project' do='each' join=', ' do='[name]'/>"
#  res: ""

nodes_in_site_group_by_year:
  src: "<r:nodes in='site' group='log_at:year' order='log_at:year asc, name asc' do='each' join=', '><r:show date='log_at' format='%Y'/></r:nodes>"
  res: ", 2006, 2007"

comments_order_desc:
  src: "<r:comments order='created_at desc'><r:each join=', '><r:show date='created_at' format='%Y-%m-%d'/>:<b do='[title]'/></r:each></r:comments>"
  res: "2008-05-21:<b>re: What about rivers ?</b>, 2006-12-20:<b>What about rivers ?</b>, 2006-12-20:<b>Nice site</b>"
  
comments_where_title:
  src: "<r:comments where='title like \"%rivers%\"'><r:each join=', '><r:show date='created_at' format='%Y-%m-%d'/>:<b do='[title]'/></r:each></r:comments>"
  res: "2006-12-20:<b>What about rivers ?</b>, 2008-05-21:<b>re: What about rivers ?</b>"

comments_no_discussion:
  context:
    node: letter
  src: "<r:comments order='created_at desc'><r:each join=', '><r:show date='created_at' format='%Y-%m-%d'/>:<b do='[title]'/></r:each><r:else>-- no comment yet --</r:else></r:comments>"
  res: "-- no comment yet --"
  
comments_previous_node:
  src: "<r:comments><r:each do='{text}'/></r:comments>"
  tem: "/zazen\(var1.text, :node=>@node\)/"

comments_in_site_node:
  src: "<r:comment from='nodes in site' order='created_at desc'><r:node do='[name]'/>: <r:show attr='title'/></r:comment>"
  res: "myLife: I want to become queen"