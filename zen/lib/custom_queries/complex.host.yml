NodeQuery:
  # form_dates
  emp_form_date:
    select:
      - no1.id
      - no1.name
      - no1.publish_from
      - no1.zip
      - no1.vclass_id
      - no1.type
      - no1.rgroup_id
      - no1.pgroup_id
      - no1.ref_lang
      - MAX(form.event_at) + INTERVAL no1.custom_a MONTH AS log_at
      - form.event_at AS last_date
      - form.event_at + INTERVAL no1.custom_a MONTH AS next_date
      - MAX(form.event_at) AS event_at
    tables:
      - nodes
      - links
      - nodes AS no1
      - links AS li1
    join_tables:
      no1:
        - LEFT JOIN nodes AS form INNER JOIN links AS flink ON flink.relation_id = RELATION_ID(assigned_formation) AND flink.target_id = NODE_ID AND flink.source_id = form.id AND flink.status = 100 ON form.project_id = no1.id
    where:
      - no1.id = li1.source_id AND li1.relation_id = RELATION_ID(assigned_course) AND li1.target_id = nodes.id
      - nodes.kpath LIKE 'NP%'
      - nodes.project_id = links.target_id
      - links.relation_id = RELATION_ID(assigned_job) AND links.source_id = NODE_ID
    group: no1.id
    order: event_at ASC, no1.name ASC
  
  course_emp_date:
    select:
      - no1.id
      - no1.name
      - no1.publish_from
      - no1.zip
      - no1.vclass_id
      - no1.type
      - no1.rgroup_id
      - no1.pgroup_id
      - no1.ref_lang
      # TODO: next_date = NULL if custom_a is null
      - form.event_at + INTERVAL NODE_ATTR(custom_a) MONTH AS next_date
      - form.event_at AS last_date
      - MAX(form.event_at) + INTERVAL NODE_ATTR(custom_a) MONTH AS log_at
      - MAX(form.event_at) AS event_at
      - NODE_ATTR(custom_a) AS custom_a
    tables:
      # NODE_ID = course
      # nodes   = pages assigned to course
      - nodes
      # no1     = employees with job containing the pages assigned to course
      - nodes AS no1
      - links
      - links AS li1
    join_tables:
      no1:
        - LEFT JOIN nodes AS form INNER JOIN links AS flink ON form.id = flink.source_id AND flink.relation_id = RELATION_ID(assigned_formation) AND flink.status = 100 ON flink.target_id = no1.id AND form.project_id = NODE_ID
    where:
      - no1.id = li1.source_id AND li1.relation_id = RELATION_ID(assigned_employee) AND li1.target_id = nodes.project_id
      - nodes.id = links.target_id AND links.relation_id = RELATION_ID(assigned_page) AND links.source_id = NODE_ID
    group: no1.id
    order: no1.name ASC, form.event_at ASC
  
  
  all_course_emp_date:
    # assigned_employees from project from assigned_pages from courses in site
    # all courses that need to have a formation created
    select:
      - nodes.id
      - nodes.name
      - nodes.publish_from
      - nodes.zip
      - nodes.vclass_id
      - nodes.type
      - nodes.rgroup_id
      - nodes.pgroup_id
      - nodes.ref_lang
      - form.event_at AS last_date
      - form.event_at + INTERVAL nodes.custom_a MONTH AS next_date
      - MIN(IF(form.event_at,form.event_at,0)) AS event_at
      - MIN(IF(form.event_at,form.event_at,0)) + INTERVAL nodes.custom_a MONTH AS log_at
      - COUNT(DISTINCT no2.id) AS custom_b
    tables:
      # nodes: courses
      - nodes
      # no1:   assigned_pages
      # no2:   assigned_employees
      - links
      - links AS li1
      # form.project_id, form.event_at, form.emp_id = formation status for course x (project_id) and employee (emp_id)
    join_tables:
      nodes:
        - "INNER JOIN nodes AS no1 INNER JOIN nodes AS no2 LEFT JOIN (SELECT nodes.project_id AS project_id, flink.target_id AS emp_id, MAX(nodes.event_at) AS event_at FROM nodes INNER JOIN links AS flink ON nodes.id = flink.source_id AND flink.relation_id = RELATION_ID(assigned_formation) AND (flink.status IS NULL OR flink.status = 100) GROUP BY flink.target_id, nodes.project_id) AS form ON form.emp_id = no2.id AND form.project_id = nodes.id"
    where:
      - no2.id = li1.source_id AND li1.relation_id = RELATION_ID(assigned_employee) AND li1.target_id = no1.project_id
      - no1.id = links.target_id AND links.relation_id = RELATION_ID(assigned_page) AND links.source_id = nodes.id
      - nodes.kpath LIKE 'NPPC%'
    group: nodes.id
    order: log_at ASC
